{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:5089/api/registrations';\nexport const register = async (eventId, data) => {\n  try {\n    console.log(`Registering for event ${eventId} with data:`, data);\n    const response = await axios.post(`${BASE_URL}/events/${eventId}`, {\n      name: data.name,\n      email: data.email\n    });\n    console.log('Registration response:', response);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering for event:', error);\n    if (error.response) {\n      console.error('Error response:', error.response.data);\n      if (error.response.status === 409) {\n        throw new Error('You are already registered for this event.');\n      } else if (error.response.status === 400 && error.response.data.includes('maximum capacity')) {\n        throw new Error('This event has reached maximum capacity.');\n      } else {\n        throw new Error(error.response.data || 'Registration failed. Please try again.');\n      }\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","register","eventId","data","console","log","response","post","name","email","error","status","Error","includes","request"],"sources":["C:/Users/Windows 11/source/repos/SmartEvent/SmartEvent/frontend/src/services/registrations.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5089/api/registrations';\r\n\r\nexport const register = async (eventId, data) => {\r\n  try {\r\n    console.log(`Registering for event ${eventId} with data:`, data);\r\n    const response = await axios.post(`${BASE_URL}/events/${eventId}`, {\r\n      name: data.name,\r\n      email: data.email\r\n    });\r\n    console.log('Registration response:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error registering for event:', error);\r\n    if (error.response) {\r\n      console.error('Error response:', error.response.data);\r\n      if (error.response.status === 409) {\r\n        throw new Error('You are already registered for this event.');\r\n      } else if (error.response.status === 400 && error.response.data.includes('maximum capacity')) {\r\n        throw new Error('This event has reached maximum capacity.');\r\n      } else {\r\n        throw new Error(error.response.data || 'Registration failed. Please try again.');\r\n      }\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,yCAAyC;AAE1D,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,OAAO,EAAEC,IAAI,KAAK;EAC/C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,yBAAyBH,OAAO,aAAa,EAAEC,IAAI,CAAC;IAChE,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,QAAQ,WAAWE,OAAO,EAAE,EAAE;MACjEM,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfC,KAAK,EAAEN,IAAI,CAACM;IACd,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAAC;IAC/C,OAAOA,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdN,OAAO,CAACM,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClBF,OAAO,CAACM,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACJ,QAAQ,CAACH,IAAI,CAAC;MACrD,IAAIO,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QACjC,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAC/D,CAAC,MAAM,IAAIF,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,IAAID,KAAK,CAACJ,QAAQ,CAACH,IAAI,CAACU,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC5F,MAAM,IAAID,KAAK,CAAC,0CAA0C,CAAC;MAC7D,CAAC,MAAM;QACL,MAAM,IAAIA,KAAK,CAACF,KAAK,CAACJ,QAAQ,CAACH,IAAI,IAAI,wCAAwC,CAAC;MAClF;IACF,CAAC,MAAM,IAAIO,KAAK,CAACI,OAAO,EAAE;MACxBV,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;MACrD,MAAM,IAAIF,KAAK,CAAC,wDAAwD,CAAC;IAC3E,CAAC,MAAM;MACL,MAAMF,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}