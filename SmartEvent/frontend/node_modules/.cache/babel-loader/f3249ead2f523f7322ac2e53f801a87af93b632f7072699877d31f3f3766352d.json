{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5089/api/events';\nexport const getEvents = async () => {\n  try {\n    console.log('Fetching events from:', API_URL);\n    const response = await axios.get(API_URL);\n    console.log('API Response:', response);\n    return response.data;\n  } catch (error) {\n    console.error('Error details:', error);\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Response data:', error.response.data);\n      console.error('Response status:', error.response.status);\n      throw new Error(error.response.data || 'Failed to fetch events from server');\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error setting up request:', error.message);\n      throw error;\n    }\n  }\n};\nexport const getEventById = async id => {\n  try {\n    console.log(`Fetching event with id ${id} from: ${API_URL}/${id}`);\n    const response = await axios.get(`${API_URL}/${id}`);\n    console.log('API Response for single event:', response);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching event with id ${id}:`, error);\n    if (error.response) {\n      throw new Error(error.response.data || `Failed to fetch event with ID ${id}`);\n    } else if (error.request) {\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw error;\n    }\n  }\n};\nexport const createEvent = async eventData => {\n  try {\n    console.log('Creating event with data:', eventData);\n    const response = await axios.post(API_URL, eventData);\n    console.log('Create event response:', response);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      throw new Error(error.response.data || 'Failed to create event');\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw error;\n    }\n  }\n};\nexport const updateEvent = async (id, eventData) => {\n  try {\n    console.log(`Updating event with id ${id} with data:`, eventData);\n    const response = await axios.put(`${API_URL}/${id}`, eventData);\n    console.log('Update event response:', response);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating event with id ${id}:`, error);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      throw new Error(error.response.data || 'Failed to update event');\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw error;\n    }\n  }\n};\nexport const deleteEvent = async id => {\n  try {\n    console.log(`Deleting event with id ${id}`);\n    const response = await axios.delete(`${API_URL}/${id}`);\n    console.log('Delete event response:', response);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting event with id ${id}:`, error);\n    if (error.response) {\n      console.error('Response data:', error.response.data);\n      throw new Error(error.response.data || 'Failed to delete event');\n    } else if (error.request) {\n      console.error('No response received:', error.request);\n      throw new Error('No response from server. Please check your connection.');\n    } else {\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","getEvents","console","log","response","get","data","error","status","Error","request","message","getEventById","id","createEvent","eventData","post","updateEvent","put","deleteEvent","delete"],"sources":["C:/Users/Windows 11/source/repos/SmartEvent/SmartEvent/frontend/src/services/events.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5089/api/events';\r\n\r\nexport const getEvents = async () => {\r\n  try {\r\n    console.log('Fetching events from:', API_URL);\r\n    const response = await axios.get(API_URL);\r\n    console.log('API Response:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error details:', error);\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Response data:', error.response.data);\r\n      console.error('Response status:', error.response.status);\r\n      throw new Error(error.response.data || 'Failed to fetch events from server');\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received:', error.request);\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error setting up request:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getEventById = async (id) => {\r\n  try {\r\n    console.log(`Fetching event with id ${id} from: ${API_URL}/${id}`);\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    console.log('API Response for single event:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching event with id ${id}:`, error);\r\n    if (error.response) {\r\n      throw new Error(error.response.data || `Failed to fetch event with ID ${id}`);\r\n    } else if (error.request) {\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const createEvent = async (eventData) => {\r\n  try {\r\n    console.log('Creating event with data:', eventData);\r\n    const response = await axios.post(API_URL, eventData);\r\n    console.log('Create event response:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating event:', error);\r\n    if (error.response) {\r\n      console.error('Response data:', error.response.data);\r\n      throw new Error(error.response.data || 'Failed to create event');\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateEvent = async (id, eventData) => {\r\n  try {\r\n    console.log(`Updating event with id ${id} with data:`, eventData);\r\n    const response = await axios.put(`${API_URL}/${id}`, eventData);\r\n    console.log('Update event response:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating event with id ${id}:`, error);\r\n    if (error.response) {\r\n      console.error('Response data:', error.response.data);\r\n      throw new Error(error.response.data || 'Failed to update event');\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteEvent = async (id) => {\r\n  try {\r\n    console.log(`Deleting event with id ${id}`);\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    console.log('Delete event response:', response);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting event with id ${id}:`, error);\r\n    if (error.response) {\r\n      console.error('Response data:', error.response.data);\r\n      throw new Error(error.response.data || 'Failed to delete event');\r\n    } else if (error.request) {\r\n      console.error('No response received:', error.request);\r\n      throw new Error('No response from server. Please check your connection.');\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}